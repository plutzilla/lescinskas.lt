name: Build and deploy lescinskas.lt website to staging

on:
  push:
    branches:
      - "master"

jobs:
  build:
    uses: ./.github/workflows/_build.yml
  minify:
    uses: ./.github/workflows/_minify.yml
    needs: build
  publish:
    name: Publish Docker image to GitHub Container Registry (GHCR)
    needs: [build, minify]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Download minified website artifact
        uses: actions/download-artifact@v3
        with:
          name: website-minified
          path: _site
      # https://github.com/docker/build-push-action/blob/master/UPGRADE.md#tags-with-ref-and-git-labels
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/plutzilla/lescinskas-lt-website
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./nginx.Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
      # - name: Push to GitHub Container Registry
      #   uses: docker/build-push-action@v1
      #   with:
      #     dockerfile: nginx.Dockerfile
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GHCR_PAT }}
      #     registry: ghcr.io
      #     repository: plutzilla/lescinskas-lt-website
      #     tag_with_ref: true
  deploy-to-staging:
    name: Deploy to staging
    needs: [build, minify, publish]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Get kubeconfig
        run: doctl k8s cluster kubeconfig show do-k8s-lescinskas-lt-cluster > .kubeconfig
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=VERSION::sha-${{ github.sha }} | cut -c1-8
      - name: Start deployment
        uses: tallyb/deployments@master
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: beta
      - name: Deploy using helm
        uses: docker://alpine/helm:3.3.1
        with:
          # entrypoint: helm
          args: >
            upgrade
            --install
            --kubeconfig=.kubeconfig
            -f ./deploy/helm/beta-lescinskas-lt.values.yaml
            --set image.repository=ghcr.io/plutzilla/lescinskas-lt-website
            --set image.tag=sha-${{ steps.get_tag.outputs.VERSION }}
            beta-lescinskas-lt
            ./deploy/helm/lescinskas.lt
      - name: Update deployment status
        uses: tallyb/deployments@master
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://beta.lescinskas.lt
